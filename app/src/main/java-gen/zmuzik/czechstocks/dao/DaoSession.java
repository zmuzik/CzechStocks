package zmuzik.czechstocks.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import zmuzik.czechstocks.dao.CurrentQuote;
import zmuzik.czechstocks.dao.Stock;
import zmuzik.czechstocks.dao.PortfolioItem;
import zmuzik.czechstocks.dao.Dividend;
import zmuzik.czechstocks.dao.StockInfo;
import zmuzik.czechstocks.dao.TodaysQuote;

import zmuzik.czechstocks.dao.CurrentQuoteDao;
import zmuzik.czechstocks.dao.StockDao;
import zmuzik.czechstocks.dao.PortfolioItemDao;
import zmuzik.czechstocks.dao.DividendDao;
import zmuzik.czechstocks.dao.StockInfoDao;
import zmuzik.czechstocks.dao.TodaysQuoteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig currentQuoteDaoConfig;
    private final DaoConfig stockDaoConfig;
    private final DaoConfig portfolioItemDaoConfig;
    private final DaoConfig dividendDaoConfig;
    private final DaoConfig stockInfoDaoConfig;
    private final DaoConfig todaysQuoteDaoConfig;

    private final CurrentQuoteDao currentQuoteDao;
    private final StockDao stockDao;
    private final PortfolioItemDao portfolioItemDao;
    private final DividendDao dividendDao;
    private final StockInfoDao stockInfoDao;
    private final TodaysQuoteDao todaysQuoteDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        currentQuoteDaoConfig = daoConfigMap.get(CurrentQuoteDao.class).clone();
        currentQuoteDaoConfig.initIdentityScope(type);

        stockDaoConfig = daoConfigMap.get(StockDao.class).clone();
        stockDaoConfig.initIdentityScope(type);

        portfolioItemDaoConfig = daoConfigMap.get(PortfolioItemDao.class).clone();
        portfolioItemDaoConfig.initIdentityScope(type);

        dividendDaoConfig = daoConfigMap.get(DividendDao.class).clone();
        dividendDaoConfig.initIdentityScope(type);

        stockInfoDaoConfig = daoConfigMap.get(StockInfoDao.class).clone();
        stockInfoDaoConfig.initIdentityScope(type);

        todaysQuoteDaoConfig = daoConfigMap.get(TodaysQuoteDao.class).clone();
        todaysQuoteDaoConfig.initIdentityScope(type);

        currentQuoteDao = new CurrentQuoteDao(currentQuoteDaoConfig, this);
        stockDao = new StockDao(stockDaoConfig, this);
        portfolioItemDao = new PortfolioItemDao(portfolioItemDaoConfig, this);
        dividendDao = new DividendDao(dividendDaoConfig, this);
        stockInfoDao = new StockInfoDao(stockInfoDaoConfig, this);
        todaysQuoteDao = new TodaysQuoteDao(todaysQuoteDaoConfig, this);

        registerDao(CurrentQuote.class, currentQuoteDao);
        registerDao(Stock.class, stockDao);
        registerDao(PortfolioItem.class, portfolioItemDao);
        registerDao(Dividend.class, dividendDao);
        registerDao(StockInfo.class, stockInfoDao);
        registerDao(TodaysQuote.class, todaysQuoteDao);
    }
    
    public void clear() {
        currentQuoteDaoConfig.getIdentityScope().clear();
        stockDaoConfig.getIdentityScope().clear();
        portfolioItemDaoConfig.getIdentityScope().clear();
        dividendDaoConfig.getIdentityScope().clear();
        stockInfoDaoConfig.getIdentityScope().clear();
        todaysQuoteDaoConfig.getIdentityScope().clear();
    }

    public CurrentQuoteDao getCurrentQuoteDao() {
        return currentQuoteDao;
    }

    public StockDao getStockDao() {
        return stockDao;
    }

    public PortfolioItemDao getPortfolioItemDao() {
        return portfolioItemDao;
    }

    public DividendDao getDividendDao() {
        return dividendDao;
    }

    public StockInfoDao getStockInfoDao() {
        return stockInfoDao;
    }

    public TodaysQuoteDao getTodaysQuoteDao() {
        return todaysQuoteDao;
    }

}
